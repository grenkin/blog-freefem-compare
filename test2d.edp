// хяундмше дюммше
real ll = pi;
real alpha = 1;
real kappaa = 1;
real uwall = 1;

//оюпюлерпш яерйх
int meshsize = 400; //ВХЯКН ОНДНРПЕГЙНБ ОН ОПНЯРПЮМЯРБС


//яерйю
mesh Th = square(meshsize, meshsize, [ll*x,ll*y]);
//plot(Th);

//яернвмше тсмйжхх
macro Grad(w) [dx(w),dy(w)] //
fespace Vh(Th, P2);
Vh phi, v;

Vh g = 3*sin(x)*sin(y);

Vh phib1 = -sin(y);
Vh phib2 = -sin(x);


  solve CalcPhi0(phi, v) =
      int2d(Th)(alpha*Grad(phi)'*Grad(v))
    + int2d(Th)(kappaa*phi*v)
    - int2d(Th)(kappaa*g*v)
    + int1d(Th)(uwall*phi*v)
    - int1d(Th, 2, 4)(uwall*phib1*v)
    - int1d(Th, 1, 3)(uwall*phib2*v);


real maxdiff = 0;
int npts = meshsize + 1;
real xi, yj;

  for (int i = 1; i <= npts; i++)
  {
    xi = ll*(i-1)/(npts-1);
    for (int j = 1; j <= npts; j++) {
      yj = ll*(j-1)/(npts-1);
      real sol = sin(xi)*sin(yj);
      real diff = abs(sol - phi(xi, yj));
      if (diff > maxdiff)
        maxdiff = diff;
    }
  }

cout << "\nmaxdiff = " << maxdiff << endl;
